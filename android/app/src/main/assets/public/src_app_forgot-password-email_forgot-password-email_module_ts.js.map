{"version":3,"file":"src_app_forgot-password-email_forgot-password-email_module_ts.js","mappings":"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","sources":["./src/app/forgot-password-email/forgot-password-email-routing.module.ts","./src/app/forgot-password-email/forgot-password-email.module.ts","./src/app/forgot-password-email/forgot-password-email.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordEmailPage } from './forgot-password-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordEmailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordEmailPageRoutingModule } from './forgot-password-email-routing.module';\n\nimport { ForgotPasswordEmailPage } from './forgot-password-email.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordEmailPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ForgotPasswordEmailPage]\n})\nexport class ForgotPasswordEmailPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { AppServiceService } from '../services/appService/app-service.service';\nimport { ForgotPasswordEmail } from '../shared/interfaces/forgotpassword';\n\n@Component({\n  selector: 'app-forgot-password-email',\n  templateUrl: './forgot-password-email.page.html',\n  styleUrls: ['./forgot-password-email.page.scss'],\n})\nexport class ForgotPasswordEmailPage implements OnInit {\n  forgotpassword: FormGroup;\n\n  constructor(formBuilder: FormBuilder, private appService: AppServiceService, private toast: ToastController, private router: Router) {//\n    this.forgotpassword = formBuilder.group({ // building a responsive form for the forgot email\n      email: new FormControl('',[Validators.required]),\n    });\n   }\n\n  ngOnInit() {\n  }\n\n  onSubmitEmail(){\n    if(this.forgotpassword.valid){\n      let email = new Object() as ForgotPasswordEmail;\n      email = {\n        email: this.forgotpassword.controls.email.value,\n      };\n      //localStorage.setItem('email', this.forgotpassword.controls.email.value);\n      this.appService.forgotPasswordEmail(email).subscribe( data => {\n        //check if the response is okay so you can send a toast\n        if(data.status === 200){\n          this.showToast(true);\n          this.router.navigate(['/login']);\n        }\n        else{\n          //check what the problem is\n          // switch(data.status){\n          //   case 500:\n          //     //internal server error\n          //     break;\n          //   case 404:\n          //     //not found\n          //     break;\n          //   case 401:\n          //     //invalid email(unauthorised)\n          //     break;\n          //   default:\n          // }\n          this.showToast(false);\n        }\n      }); // sends the email to backend so that the email can be sent\n    }\n  }\n\n  async showToast(success: boolean){\n    const toastSuccess = await this.toast.create({\n      message: 'Email has been sent',\n      duration: 1500,\n      buttons: [\n        {\n          side: 'end',\n          icon: 'close',\n          role: 'cancel'\n        }\n      ],\n      color: 'success'\n    });\n\n    const toastFail = await this.toast.create({\n      message: 'Email was not sent. Retype email address',\n      duration: 1500,\n      buttons: [\n        {\n          side: 'end',\n          icon: 'close',\n          role: 'cancel'\n        }\n      ],\n      color: 'Danger'\n    });\n\n    if(success){\n      toastSuccess.present();\n    }\n    else{\n      toastFail.present();\n    }\n\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}