{"version":3,"file":"src_app_home_alphabet-category_alphabet-category_module_ts.js","mappings":"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","sources":["./src/app/home/alphabet-category/alphabet-category-routing.module.ts","./src/app/home/alphabet-category/alphabet-category.module.ts","./src/app/home/alphabet-category/alphabet-category.page.ts","./src/app/home/block-try-char/block-try-char.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AlphabetCategoryPage } from './alphabet-category.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AlphabetCategoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AlphabetCategoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AlphabetCategoryPageRoutingModule } from './alphabet-category-routing.module';\n\nimport { AlphabetCategoryPage } from './alphabet-category.page';\nimport { BlockTryCharComponent } from '.././block-try-char/block-try-char.component';\nimport { NavbarModule } from 'src/app/shared/components/navbar/navbar.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AlphabetCategoryPageRoutingModule,\n    NavbarModule\n  ],\n  declarations: [AlphabetCategoryPage, BlockTryCharComponent]\n})\nexport class AlphabetCategoryPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport character_sets from '../../shared/character_data/character_sets.json';\n\n@Component({\n  selector: 'app-alphabet-category',\n  templateUrl: './alphabet-category.page.html',\n  styleUrls: ['./alphabet-category.page.scss'],\n})\nexport class AlphabetCategoryPage implements OnInit {\n\n  category: string;\n  currentJSON: string;\n  jsonAlphabet: any;\n  style: string;\n  heading: string;\n\n  constructor(private route: ActivatedRoute, private router: Router ) { }\n\n  ngOnInit() {\n\n    this.currentJSON = '';\n\n    this.category = this.route.snapshot.queryParamMap.get('category');\n    this.heading = this.category;\n\n    const splitted = this.category.split(' ');\n    console.log(splitted);\n\n    this.currentJSON += splitted[0];\n    this.currentJSON = this.currentJSON.toLowerCase();\n    this.style = this.currentJSON;\n\n    if(splitted.indexOf('Group') > -1)\n    {\n      this.currentJSON += 'Group' + splitted[3];\n    }\n    else\n    {\n      if(splitted.indexOf('Vowels') > -1)\n      {\n        this.currentJSON += 'Vowels';\n      }\n    }\n    console.log(this.currentJSON);\n    this.getJSON();\n  }\n\n  getJSON(){\n      if(this.currentJSON === 'katakana')\n      {\n        this.jsonAlphabet = character_sets.katakana;\n      }\n\n      if(this.currentJSON === 'kanji')\n      {\n        this.jsonAlphabet = character_sets.kanji;\n      }\n\n      if(this.currentJSON === 'hiraganaVowels')\n      {\n        this.jsonAlphabet = character_sets.hiraganaVowels;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupK')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupK;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupS')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupS;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupT')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupT;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupN')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupN;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupH')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupH;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupM')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupK;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupY')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupY;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupR')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupK;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupW')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupW;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupG')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupG;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupZ')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupZ;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupD')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupD;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupB')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupB;\n      }\n\n      if(this.currentJSON === 'hiraganaGroupP')\n      {\n        this.jsonAlphabet = character_sets.hiraganaGroupP;\n      }\n  }\n\n  onLogout(){\n    localStorage.removeItem('id');\n    if (localStorage.getItem('token')) {\n      localStorage.removeItem('token');\n    }\n    this.router.navigate(['/login']);\n\n  }\n\n  ifGuest(): boolean{\n    if (localStorage.getItem('id')) {\n      if (localStorage.getItem('id') === 'guest') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppServiceService } from 'src/app/services/appService/app-service.service';\nimport { CharacterImage } from 'src/app/shared/interfaces/image';\n\n@Component({\n  selector: 'app-block-try-char',\n  templateUrl: './block-try-char.component.html',\n  styleUrls: ['./block-try-char.component.scss'],\n})\nexport class BlockTryCharComponent implements OnInit {\n\n  @Input() letter: string;\n  @Input() translate: string;\n  @Input() group: string;\n  constructor(private service: AppServiceService, private router: Router) { }\n\n  ngOnInit() {}\n\n    //TODO: add navigation to upload page, #, Phumu\n    showUploadPage(){\n      //send image to the upload page and redirect to upload page\n      const image: CharacterImage ={\n        characterName: this.translate,\n        group: this.group,\n        url: this.letter\n      };\n      this.service.setTryImage(image);\n      this.router.navigate(['/upload']);\n    }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}