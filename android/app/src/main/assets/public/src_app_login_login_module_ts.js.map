{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PasswordModule } from '../shared/components/password/password.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule,\n    PasswordModule,\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","/* eslint-disable @typescript-eslint/dot-notation */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AppServiceService } from '../services/appService/app-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  login: FormGroup; // form name used to link with html form\n  isUsername = false; // is there a username provided\n  //usernameInputColor = 'border-color: dark;';\n  isPassword = false; // is there a username provided\n  //passwordInputColor = 'border-color: dark;';\n  hide = true; // a variable used to show or hide a password\n\n  constructor(formBuilder: FormBuilder, private router: Router, private appService: AppServiceService) {//\n    this.login = formBuilder.group({ // building a responsive form with two inputs\n      username: new FormControl('',[Validators.required]),\n      password: new FormControl('',[Validators.required])\n    });\n   }\n\n  ngOnInit() {\n  }\n\n  onLogin(){\n    const username = this.login.controls.username.value;\n    const password = this.login.controls.password.value;//'zamakweyama04@gmail.com', 'P@55word'\n\n    if (username === '') {\n     // this.usernameInputColor = 'border-color: darkred;';\n      this.isUsername =  true;\n    }\n    else{\n      //this.usernameInputColor = 'border-color: dark;';\n      this.isUsername = false; // is there a username provided\n    }\n\n    if(password === ''){\n      this.isPassword = true;\n     // this.passwordInputColor = 'border-color: darkred;';\n    }else{\n      this.isPassword = false; // is there a username provided\n      //this.passwordInputColor = 'border-color: dark;';\n    }\n\n    if (!(username === '') && !(password === '')) {\n\n      this.appService.isUser(username,password )\n      .subscribe(data =>{\n        if(data.status === 200){\n          if (!localStorage.getItem('id')) {\n            localStorage.setItem('id',data.body['data'][1].toString());\n          }\n          if (!localStorage.getItem('token')) {\n            localStorage.setItem('token',data.body['user-token'].toString());\n          }\n\n          this.login.controls.username.reset();\n          this.login.controls.password.reset();\n\n          this.router.navigate(['/home']);\n        }\n      });\n    }\n  }\n\n  onGuestLogin(){\n      localStorage.setItem('id','guest');\n      this.router.navigate(['/home']);\n  }\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}